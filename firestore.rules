rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users can only access their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Clients are user-specific - users can only access their own clients
    match /clients/{clientId} {
      allow read, write, delete: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }
    
    // Services are nested under clients and inherit the same permissions
    match /clients/{clientId}/services/{serviceId} {
      allow read, write, delete: if request.auth != null && 
        get(/databases/$(database)/documents/clients/$(clientId)).data.userId == request.auth.uid;
    }
    
    // Generation history is user-specific
    match /generations/{generationId} {
      allow read, write, delete: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }
    
    // User preferences and settings
    match /userPreferences/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Analytics data - users can only read their own analytics
    match /analytics/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      // Analytics are written by Cloud Functions only
    }
    
    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 